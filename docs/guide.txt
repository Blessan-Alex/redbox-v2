Setting Up RedBox
1. Environment Setup
docker --version â€“ Verified Docker installation


git --version â€“ Confirmed Git is working


python3 --version â€“ Checked Python 3.12


node --version & npm --version â€“ Verified Node.js


poetry --version â€“ Checked Poetry (initially failed, then installed)



2. Poetry Installation
curl -sSL https://install.python-poetry.org | python3 - â€“ Installed Poetry package manager


export PATH="$HOME/.local/bin:$PATH" â€“ Added Poetry to PATH


echo 'export PATH="$HOME/.local/bin:$PATH"' >> ~/.bashrc â€“ Made Poetry permanent



3. Project Setup
cp .env.example .env â€“ Created environment configuration file


poetry install â€“ Installed all Python dependencies (root project)



4. Docker Operations
docker compose build â€“ Built all Docker images (django-app, lit-ssr, redbox-worker)


docker compose down â€“ Cleaned up existing containers


docker compose up -d db minio â€“ Started PostgreSQL database and MinIO object storage


docker compose up -d django-app â€“ Started Django web application


docker compose ps â€“ Checked status of all running containers



5. Database & User Setup
docker compose run --rm django-app venv/bin/django-admin createsuperuser â€“ Created admin user (john doe123@gmail.com)



6. Logging & Debugging
docker compose logs django-app â€“ Viewed Django application logs


docker compose logs django-app | findstr "magic_link" â€“ Searched for magic link URLs


docker compose logs django-app --tail 50 â€“ Viewed recent logs



7. MinIO Setup
docker compose exec minio mc ls data/ â€“ Checked MinIO bucket status



âœ… Current Status
PostgreSQL, MinIO, Django app running


Superuser created: johndoe123@gmail.com


.env file configured


Poetry dependencies installed



ðŸš€ Next Steps
MinIO bucket creation: Create redbox-storage-dev bucket via web interface â€“ http://localhost:9001


Magic link authentication: Trigger magic link generation by visiting â€“ http://localhost:8090/log-in


Application testing: Access main app at â€“ http://localhost:8090




